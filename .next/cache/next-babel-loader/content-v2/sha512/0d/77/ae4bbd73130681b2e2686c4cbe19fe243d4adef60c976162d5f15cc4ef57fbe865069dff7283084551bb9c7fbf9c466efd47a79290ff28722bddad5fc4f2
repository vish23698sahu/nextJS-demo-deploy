{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Vishakha\\\\Tech\\\\Front End Development\\\\React\\\\NextJS-s-23\\\\nextJS-Meetups\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://tse4.mm.bing.net/th?id=OIP.ZFc2qLQkb0JFmR9sX6HwbwHaE8&pid=Api&P=0\",\n    title: \"First Meet Up\",\n    address: \"Some great adress one, street 4545\",\n    description: \"The meet up description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n;\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://vishh:vishH@cluster0.qxn9fyr.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId); //fetch data for a single meetup\n\n  const client = await MongoClient.connect('mongodb+srv://vishh:vishH@cluster0.qxn9fyr.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        image: \"https://tse4.mm.bing.net/th?id=OIP.ZFc2qLQkb0JFmR9sX6HwbwHaE8&pid=Api&P=0\",\n        id: meetupId,\n        title: \"First Meet Up\",\n        address: \"Some great adress one, street 4545\",\n        description: \"The meet up description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Vishakha/Tech/Front End Development/React/NextJS-s-23/nextJS-Meetups/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","selectedMeetup","findOne","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI,QAAC,YAAD;AAAc,IAAA,KAAK,EAAC,2EAApB;AACI,IAAA,KAAK,EAAC,eADV;AAEI,IAAA,OAAO,EAAC,oCAFZ;AAGI,IAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;AAAA;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,4FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAF0C,CAI1C;;AACA,QAAMf,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CAAoB,4FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMiB,cAAc,GAAG,MAAMlB,iBAAiB,CAACmB,OAAlB,CAA0B;AAAEf,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B;AACAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHc,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,2EADC;AAERC,QAAAA,EAAE,EAAEX,QAFI;AAGRY,QAAAA,KAAK,EAAE,eAHC;AAIRC,QAAAA,OAAO,EAAE,oCAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAGD,eAAe/B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n    return (\r\n        <MeetupDetail image=\"https://tse4.mm.bing.net/th?id=OIP.ZFc2qLQkb0JFmR9sX6HwbwHaE8&pid=Api&P=0\"\r\n            title=\"First Meet Up\"\r\n            address=\"Some great adress one, street 4545\"\r\n            description=\"The meet up description\"\r\n        />\r\n    );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://vishh:vishH@cluster0.qxn9fyr.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            }\r\n        })),\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    console.log(meetupId);\r\n\r\n    //fetch data for a single meetup\r\n    const client = await MongoClient.connect('mongodb+srv://vishh:vishH@cluster0.qxn9fyr.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                image: \"https://tse4.mm.bing.net/th?id=OIP.ZFc2qLQkb0JFmR9sX6HwbwHaE8&pid=Api&P=0\",\r\n                id: meetupId,\r\n                title: \"First Meet Up\",\r\n                address: \"Some great adress one, street 4545\",\r\n                description: \"The meet up description\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}